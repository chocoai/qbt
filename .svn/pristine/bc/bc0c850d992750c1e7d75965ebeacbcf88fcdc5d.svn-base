package com.qbt.web.support.impl;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.qbt.common.entity.PageEntity;
import com.qbt.common.exception.BusinessException;
import com.qbt.common.util.BeanUtil;
import com.qbt.common.util.Checker;
import com.qbt.persistent.entity.TicketPackageRule;
import com.qbt.persistent.entity.TicketPackageRuleConfig;
import com.qbt.service.TicketPackageRuleConfigService;
import com.qbt.service.TicketPackageRuleService;
import com.qbt.web.pojo.ticketPackageRule.TicketPackageRuleConfVo;
import com.qbt.web.pojo.ticketPackageRule.TicketPackageRulePageReqVo;
import com.qbt.web.pojo.ticketPackageRule.TicketPackageRuleVo;
import com.qbt.web.support.TicketPackageRuleSupport;

@Service
public class TicketPackageRuleSupportImpl implements TicketPackageRuleSupport{

	@Resource
	private TicketPackageRuleService ticketPackageRuleService;
	
	@Resource
	private TicketPackageRuleConfigService ticketPackageRuleConfigService;
	
	@Override
	public int insert(TicketPackageRuleVo ticketPackageRuleVo) throws BusinessException{
		
		if(Checker.isEmpty(ticketPackageRuleVo.getTicketPackageRuleConfVolist()))
		{
			throw new BusinessException("券包清单不能为空");
		}
		
		if(Checker.isNotEmpty(ticketPackageRuleService.findByRuleName(ticketPackageRuleVo.getRuleName())))
		{
			throw new BusinessException("券包规则已存在");
		}
		
		TicketPackageRule tpRule = new TicketPackageRule();
		tpRule.setDescription(ticketPackageRuleVo.getDescription());
		tpRule.setIsStorageService(ticketPackageRuleVo.getIsStorageService());
		//tpRule.setOperator(ticketPackageRuleVo.get);
		tpRule.setRuleName(ticketPackageRuleVo.getRuleName());
		tpRule.setPrice(ticketPackageRuleVo.getPrice());
		tpRule.setStatus(ticketPackageRuleVo.getStatus());
		int id = ticketPackageRuleService.insert(tpRule);
	
		List<TicketPackageRuleConfig> configList = BeanUtil.list2list(ticketPackageRuleVo.getTicketPackageRuleConfVolist(), TicketPackageRuleConfig.class);
		
		for(TicketPackageRuleConfig c : configList){
			c.setRuleId(id);
		}
		ticketPackageRuleConfigService.insertByBatch(configList);
		return 0;
	}

	@Override
	public List<TicketPackageRuleVo> findByPage(TicketPackageRulePageReqVo reqVo) {
		
		PageEntity<TicketPackageRule> pageEntity = BeanUtil.pageConvert(reqVo, TicketPackageRule.class);
		List<TicketPackageRule> list = ticketPackageRuleService.findByPage(pageEntity);
		List<TicketPackageRuleVo> voList = BeanUtil.list2list(list, TicketPackageRuleVo.class);
		
		reqVo.setTotalCount(pageEntity.getTotalCount());
		
		return voList;
	}

	@Override
	public TicketPackageRuleVo findById(int id)  throws BusinessException{
		
		TicketPackageRule ticketPackageRule = ticketPackageRuleService.findById(id);
		if(Checker.isEmpty(ticketPackageRule))
		{
			throw new BusinessException("查询不到券包规则");
		}
		
		List<TicketPackageRuleConfig> configs = ticketPackageRuleConfigService.findByRuleId(id);
		
		TicketPackageRuleVo ticketPackageRuleVo  = BeanUtil.a2b(ticketPackageRule, TicketPackageRuleVo.class);
		
		List<TicketPackageRuleConfVo> configVoList = BeanUtil.list2list(configs, TicketPackageRuleConfVo.class);
		
		ticketPackageRuleVo.setTicketPackageRuleConfVolist(configVoList);
		
		return ticketPackageRuleVo;
	}

	
}
