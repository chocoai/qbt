<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qbt.persistent.mapper.RewardActitvityMapper">
	<resultMap id="BaseResultMap" type="RewardActitvity">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="actitvity_name" property="actitvityName"
			jdbcType="VARCHAR" />
		<result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
		<result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
		<result column="actitvity_type" property="actitvityType"
			jdbcType="INTEGER" />
		<result column="reward_type" property="rewardType" jdbcType="INTEGER" />
		<result column="probability" property="probability" jdbcType="INTEGER" />
		<result column="prize" property="prize" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="operator" property="operator" jdbcType="INTEGER" />
	</resultMap>
	
	<sql id="Base_Column_List">
		id, create_time, update_time, actitvity_name, start_date, end_date,
		actitvity_type, reward_type, probability, prize, status, remark, operator
	</sql>
	
	<insert id="insert" parameterType="RewardActitvity"
		useGeneratedKeys="true" keyProperty="id">
		insert into reward_actitvity (
		create_time,actitvity_name,
		start_date,end_date,actitvity_type,reward_type,
		probability,prize,status,remark,operator
		) values (
		#{createTime},#{actitvityName},#{startDate},#{endDate},
		#{actitvityType},#{rewardType},#{probability},
		#{prize},#{status},#{remark},#{operator}
		)
	</insert>

	<update id="updateById" parameterType="RewardActitvity">
		update reward_actitvity
		<set>
			<if test="updateTime != null">
				update_time = now(),
			</if>
			<if test="actitvityName != null">
				actitvity_name = #{actitvityName},
			</if>
			<if test="startDate != null">
				start_date = #{startDate},
			</if>
			<if test="endDate !=null">
				end_date = #{endDate},
			</if>
			<if test="actitvityType !=null">
				actitvity_type = #{actitvityType},
			</if>
			<if test="rewardType !=null">
				reward_type = #{rewardType},
			</if>
			<if test="probability !=null">
				probability = #{probability},
			</if>
			<if test="prize !=null">
				prize = #{prize},
			</if>
			<if test="remark !=null">
				remark = #{remark},
			</if>
			<if test="prize !=null">
				status = #{status},
			</if>
			<if test="operator !=null">
				operator = #{operator},
			</if>
		</set>
		where id = #{id}
	</update>

	<delete id="deleteById" parameterType="RewardActitvity">
		update reward_actitvity
		<set> status = -1,operator = #{operator}</set>
		where id = #{id}
	</delete>

	<select id="list" resultMap="BaseResultMap">
		select
		t.id,
		t.actitvity_name,
		t.start_date,
		t.end_date,
		t.actitvity_type,
		t.reward_type,
		t.probability,
		t1.name prize,
		t.status,
		t.remark,
		t.operator
		from reward_actitvity t
		LEFT JOIN activity t1 on t.prize = t1.id
		<where>
			<if test="condition.actitvityName!=null">
				and t.actitvity_name like CONCAT('%',#{condition.actitvityName},'%')
			</if>
			<if test="condition.prize!=null">
				and t.prize = #{condition.prize}
			</if>
			<if test="condition.actitvityType!=null">
				and t.actitvity_type = #{condition.actitvityType}
			</if>
			<if test="condition.rewardType">
				and t.reward_type = #{condition.rewardType}
			</if>
			<if test="condition.startDate">
				<![CDATA[
				 and	t.start_date > #{condition.startDate}
				]]>
			</if>
			<if test="condition.endDate">
					<![CDATA[
				 and	t.end_date < #{condition.endDate}
				]]>
			</if>
			and t.status >=0
		</where>

		<choose>
			<when test="orderByColumn != null and orderByType != null">
				ORDER BY ${orderByColumn} ${orderByType}
			</when>
			<otherwise>
				ORDER BY t.create_time desc
			</otherwise>
		</choose>
	</select>

	<select id="timeValidate" resultType="Integer" parameterType="RewardActitvity">
		select id from reward_actitvity t where
		<if test="id != null">
			t.id <![CDATA[ <>  ]]>
			#{id} and
		</if>
		t.actitvity_type = #{actitvityType} and t.status=0
		and (
		(t.end_date  <![CDATA[ >=  ]]>
		#{startDate} and t.start_date  <![CDATA[ <=  ]]>#{startDate})
		or
		(t.end_date  <![CDATA[ >=  ]]>
		#{endDate} and t.start_date  <![CDATA[ <=  ]]>#{endDate})
		)

	</select>
	<select id="findById" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from reward_actitvity t
		where t.id = #{id}
	</select>

	<select id="findCurrentRewardActitvity" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from reward_actitvity  
		where start_date <![CDATA[<]]> now() and end_date <![CDATA[>]]> now()  and status = 0
	</select>

</mapper>