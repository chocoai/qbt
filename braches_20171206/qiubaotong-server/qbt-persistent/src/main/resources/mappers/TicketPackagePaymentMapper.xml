<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qbt.persistent.mapper.TicketPackagePaymentMapper">

	<resultMap id="BaseResultMap" type="TicketPackagePayment">
		<id column="id" property="id" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
		<result column="uuid" property="uuid" />
		<result column="order_id" property="orderId" />
		<result column="user_id" property="userId" />
		<result column="pay_amount" property="payAmount" />
		<result column="pay_method" property="payMethod" />
		<result column="status" property="status" />
		<result column="pay_status" property="payStatus" />
		<result column="nonce_str" property="nonceStr" jdbcType="VARCHAR" />
		<result column="pay_sign" property="paySign" />
		<result column="prepay_id" property="prepayId" />
		<result column="pay_bak_no" property="payBakNo" />
		<result column="start_time" property="startTime" />
		<result column="expire_time" property="expireTime" />
		<result column="paypackage" property="paypackage" />
		<result column="activity_name" property="activityName" />
		<result column="activity_amount" property="activityAmount" />
		
	</resultMap>
	
	<sql id="Base_Column_List">
		id,create_time,update_time,uuid,order_id,user_id,pay_amount,
		pay_method,status,pay_status,activity_amount,activity_name,
		nonce_str,pay_sign,prepay_id,pay_bak_no,start_time,expire_time,paypackage 
	</sql>
	
	<select id="selectById" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ticket_package_payment
		where id = #{id}
	</select>
	
	<insert id="insert" parameterType="TicketPackagePayment" keyProperty="id" useGeneratedKeys="true">
		insert into ticket_package_payment (
			create_time,update_time,uuid,order_id,user_id,pay_amount,
		pay_method,status,pay_status,activity_amount,activity_name,
		nonce_str,pay_sign,prepay_id,pay_bak_no,start_time,expire_time,paypackage
		)
		values (
			#{createTime},
			#{updateTime},
			#{uuid}, 
			#{orderId}, 
			#{userId},
			#{payAmount}, 
			#{payMethod},
			#{status},
			#{payStatus}, 
			#{activityAmount},
			#{activityName}, 
			#{nonceStr},
			#{paySign}, 
			#{prepayId}, 
			#{payBakNo},
			#{startTime}, 
			#{expireTime},
			#{paypackage}
		)
	</insert>
	
	<update id="updateById" parameterType="TicketPackagePayment">
		update ticket_package_payment
		<set>
			<if test="updateTime != null">
				update_time = now(),
			</if>
			<if test="uuid != null">
				uuid = #{uuid},
			</if>
			<if test="orderId != null">
				order_id = #{orderId},
			</if>
			<if test="userId != null">
				user_id = #{userId},
			</if>
			<if test="payAmount != null">
				pay_amount = #{payAmount},
			</if>
			<if test="payMethod != null">
				pay_method = #{payMethod},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="payStatus != null">
				pay_status = #{payStatus},
			</if>
			<if test="nonceStr != null">
				nonce_str = #{nonceStr},
			</if>
			<if test="paySign != null">
				pay_sign = #{paySign},
			</if>
			<if test="prepayId != null">
				prepay_id = #{prepayId},
			</if>
			<if test="payBakNo != null">
				pay_bak_no = #{payBakNo},
			</if>
			<if test="startTime != null">
				start_time = #{startTime},
			</if>
			<if test="expireTime != null">
				expire_time = #{expireTime},
			</if>
			<if test="paypackage != null">
				paypackage = #{paypackage},
			</if>
		</set>
		where id = #{id}
	</update>


	<select id="findByUserId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ticket_package_payment
		where user_id = #{userId} and pay_method =#{paymethod} order by id desc
		limit 1
	</select>


	<select id="findByUuid" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ticket_package_payment
		where uuid = #{uuid}
	</select>


</mapper>