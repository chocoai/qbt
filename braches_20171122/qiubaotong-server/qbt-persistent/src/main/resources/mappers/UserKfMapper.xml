<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qbt.persistent.mapper.UserKfMapper">
	<resultMap id="BaseResultMap" type="UserKf">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="mobile" property="mobile" jdbcType="VARCHAR" />
		<result column="level" property="level" jdbcType="INTEGER" />
		<result column="desc" property="desc" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="INTEGER" />
	</resultMap>
	
	<sql id="Base_Column_List">
		id, create_time, name, user_id, mobile, level, `desc`, `type` 
	</sql>
	
	<select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user_kf
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<insert id="insert" parameterType="UserKf" keyProperty="id" useGeneratedKeys="true">
		insert into user_kf (
			create_time, 
			name,
			user_id, 
			mobile, 
			level,
			`desc`, 
			`type`
		)
		values (
			#{createTime},
			#{name,jdbcType=VARCHAR},
			#{userId,jdbcType=INTEGER}, 
			#{mobile,jdbcType=VARCHAR}, 
			#{level,jdbcType=INTEGER},
			#{desc,jdbcType=VARCHAR},
			#{type,jdbcType=INTEGER}
		)
	</insert>
	
	<update id="updateById" parameterType="UserKf">
		update user_kf
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="level != null">
				level = #{level,jdbcType=INTEGER},
			</if>
			<if test="desc != null">
				`desc` = #{desc,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				`type` = #{type,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<delete id="delete" parameterType="java.lang.Integer">
		delete from user_kf where id = #{id,jdbcType=INTEGER}
	</delete>
	
	<select id="findByPage" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List" />
		from user_kf 
		<where>
			<if test="condition.name != null and condition.name != ''">
				and name like concat ('%',#{condition.name,jdbcType=VARCHAR},'%') 
			</if>
			<if test="condition.userId != null">
				and user_id = #{condition.userId,jdbcType=INTEGER} 
			</if>
			<if test="condition.mobile != null and condition.mobile != ''">
				and mobile like concat ('%',#{condition.mobile,jdbcType=VARCHAR},'%') 
			</if>
			<if test="condition.level != null">
				and level = #{condition.level,jdbcType=INTEGER} 
			</if>
			<if test="condition.type != null">
				and type = #{condition.type,jdbcType=INTEGER} 
			</if>
		</where>
		<choose>
			<when test="orderByColumn != null and orderByType != null">
				ORDER BY ${orderByColumn} ${orderByType}
			</when>
			<otherwise>
				ORDER BY create_time desc 
			</otherwise>
		</choose>
	</select>
	
	<select id="findByType" resultMap="BaseResultMap">
	  	select 
	    <include refid="Base_Column_List" />
	    from user_kf
	    where type = #{type,jdbcType=INTEGER}
	</select>
	
	<select id="findByCondition" parameterType="UserKf" resultMap="BaseResultMap">
		SELECT 
		<include refid="Base_Column_List" />
		FROM user_kf 
		<where>
			<if test="userId != null">
				AND user_id = #{userId} 
			</if>
			<if test="type != null">
				AND type = #{type} 
			</if>
		</where>
	</select>
	
</mapper>