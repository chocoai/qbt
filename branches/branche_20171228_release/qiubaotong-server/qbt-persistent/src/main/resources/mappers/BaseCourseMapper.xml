<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qbt.persistent.mapper.BaseCourseMapper">

	<resultMap id="BaseResultMap" type="BaseCourse">
		<id column="id" property="id" />
		<result column="create_time" property="createTime" />
		<result column="update_time" property="updateTime" />
		<result column="name" property="name" />
		<result column="short_name" property="shortName" />
		<result column="english_name" property="englishName" />
		<result column="initial" property="initial" />
		<result column="first_letter" property="firstLetter" />
		<result column="logo" property="logo" />
		<result column="area_id" property="areaId" />
		<result column="tree_path" property="treePath" />
		<result column="address" property="address" />
		<result column="lon" property="lon" />
		<result column="lat" property="lat" />
		<result column="status" property="status" />
		<result column="is_delete" property="isDelete" />
		<result column="juli" property="juli" />
		<result column="is_out_range" property="isOutRange" />
		<result column="out_range_time" property="outRangeTime" />
		<result column="out_range_price" property="outRangePrice" />
		<result column="is_tip" property="isTip" />
		<result column="wechat_tip" property="wechatTip" />
		<result column="is_practice" property="isPractice" />
		
	</resultMap>
	
	<resultMap type="BossBaseCourse" id="BossResultMap" extends="BaseResultMap">
		<result column="contact" property="contact" />
		<result column="mobile" property="mobile" />
		<result column="has_assistant" property="hasAssistant" />
	</resultMap>
	
	
	<resultMap type="UserCourse" id="UserCourseResultMap" extends="BaseResultMap">
		<result column="contact" property="contact" />
		<result column="mobile" property="mobile" />
	</resultMap>
	
	<sql id="Base_Column_List">
		id, 
		create_time, 
		update_time, 
		name, 
		short_name, 
		english_name, 
		initial,
		first_letter,
		logo, 
		area_id, 
		tree_path, 
		address, 
		lon, 
		lat, 
		status, 
		is_delete, 
		is_out_range,
		out_range_time,
		out_range_price,
		is_tip,
		wechat_tip,
		is_practice
	</sql>
	
	<select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from base_course
		where id = #{id}
	</select>

	<insert id="insert" parameterType="BaseCourse" useGeneratedKeys="true" keyProperty="id">
		insert into base_course (
			create_time, 
			update_time,
			name, 
			short_name, 
			english_name,
			initial, 
			first_letter, 
			logo,
			area_id, 
			tree_path, 
			address,
			lon, 
			lat, 
			status, 
			is_delete,
			is_out_range,
			out_range_time,
			out_range_price,
			is_tip,
			wechat_tip,
			is_practice
		)
		values (
			#{createTime}, 
			#{updateTime},
			#{name}, 
			#{shortName},
			#{englishName},
			#{initial}, 
			#{firstLetter}, 
			#{logo},
			#{areaId}, 
			#{treePath},
			#{address},
			#{lon}, 
			#{lat}, 
			#{status},
			#{isDelete},
			#{isOutRange},
			#{outRangeTime},
			#{outRangePrice},
			#{isTip},
			#{wechatTip},
			#{isPractice}
		)
	</insert>

	<update id="updateById" parameterType="BaseCourse">
		update base_course
		<set>
			<if test="updateTime != null">
				update_time = now(),
			</if>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="shortName != null">
				short_name = #{shortName},
			</if>
			<if test="englishName != null">
				english_name = #{englishName},
			</if>
			<if test="initial != null">
				initial = #{initial},
			</if>
			<if test="firstLetter != null">
				first_letter = #{firstLetter},
			</if>
			<if test="logo != null">
				logo = #{logo},
			</if>
			<if test="areaId != null">
				area_id = #{areaId},
			</if>
			<if test="treePath != null">
				tree_path = #{treePath},
			</if>
			<if test="address != null">
				address = #{address},
			</if>
			<if test="lon != null">
				lon = #{lon},
			</if>
			<if test="lat != null">
				lat = #{lat},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="isOutRange != null">
				is_out_range = #{isOutRange},
			</if>
			<if test="outRangeTime != null">
				out_range_time = #{outRangeTime},
			</if>
			<if test="outRangePrice != null">
				out_range_price = #{outRangePrice},
			</if>
			<if test="isTip != null">
				is_tip = #{isTip},
			</if>
			<if test="wechatTip != null">
				wechat_tip = #{wechatTip},
			</if>
			<if test="isPractice != null">
				is_practice = #{isPractice},
			</if>
		</set>
		where id = #{id}
	</update>


	<select id="findList" resultMap="BaseResultMap">
		SELECT *
		<if test="lon != 0 and lat != 0">
			, ROUND(6378.138*2*asin(sqrt(pow(sin(
			(#{lat}*pi()/180-lat*pi()/180)/2),2)
			+cos(#{lat}*pi()/180)*cos(lat*pi()/180)* pow(sin(
			(#{lon}*pi()/180-lon*pi()/180)/2),2)))
			*1000) AS juli
		</if>
		FROM base_course 
		<where>
			is_delete = false 
			and area_id not in (select id from base_sf_area where status=false) 
			<if test="name != null and name != ''">
				and (name LIKE CONCAT('%',#{name},'%' ) or address LIKE CONCAT('%',#{name},'%' ))
			</if>
			<if test="area_id != 0">
				and area_id in (SELECT id from base_sf_area where tree_id like CONCAT('%',#{area_id},'%' ))
			</if>
			<if test="status == 1">
				and status = 1 
			</if>
			<if test="status == 2">
				and status != 1 
			</if>
			<if test="isPractice != null">
				and is_practice = #{isPractice}
			</if>
		</where>
		ORDER BY status ASC
		<if test="lon != 0 and lat != 0">
			,juli DESC
		</if>
	</select>
	
	<select id="findListByFirstLetter" resultMap="BaseResultMap">
		SELECT *
		<if test="lon != 0 and lat != 0">
			, ROUND(6378.138*2*asin(sqrt(pow(sin(
			(#{lat}*pi()/180-lat*pi()/180)/2),2)
			+cos(#{lat}*pi()/180)*cos(lat*pi()/180)* pow(sin(
			(#{lon}*pi()/180-lon*pi()/180)/2),2)))
			*1000) AS juli
		</if>
		FROM base_course 
		<where>
			is_delete = false 
			and area_id not in (select id from base_sf_area where status=false) 
			<if test="name != null and name != ''">
				and (name LIKE CONCAT('%',#{name},'%' ) or address LIKE CONCAT('%',#{name},'%' ))
			</if>
			<if test="area_id != 0">
				and area_id in (SELECT id from base_sf_area where tree_id like CONCAT('%',#{area_id},'%' ))
			</if>
			<if test="status == 1">
				and status = 1 
			</if>
			<if test="status == 2">
				and status != 1 
			</if>
			<if test="isPractice != null">
				and is_practice = #{isPractice}
			</if>
		</where>
		ORDER BY <!-- status ASC, --> first_letter
	</select>
	
	<select id="findByPage" resultMap="BossResultMap">
		select 
			c.id,
			c.create_time,
			c.name,
			c.area_id,
			c.tree_path,
			c.status,
			c.is_delete,
			c.address,
			i.contact,
			i.mobile,
			i.has_assistant,
			c.is_out_range,
			c.out_range_time,
			c.out_range_price 
		from base_course c left join base_course_info i on c.id=i.course_id 
		<where>
			<if test="condition.name != null and condition.name != ''">
				and c.name like concat('%',#{condition.name},'%') 
			</if>
			<if test="condition.areaId != null and condition.areaId > 0">
				and c.area_id in (select id from base_sf_area where tree_id like concat('%',#{condition.areaId},'%')) 
			</if>
			<if test="condition.status != null and condition.status > 0">
				and c.status = #{condition.status} 
			</if>
			<if test="condition.isDelete != null">
				and c.is_delete = #{condition.isDelete} 
			</if>
			<if test="condition.isOutRange != null">
				and c.is_out_range = #{condition.isOutRange} 
			</if>
		</where>
		<choose>
			<when test="orderByColumn != null and orderByType != null">
				ORDER BY ${orderByColumn} ${orderByType}
			</when>
			<otherwise>
				ORDER BY c.create_time desc 
			</otherwise>
		</choose>
	</select>
	
	<select id="findByAreaId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from base_course 
		<where>
			<if test="areaId != null">
				and area_id in (select id from base_sf_area where parent_id=#{areaId} or id=#{areaId}) 
			</if>
		</where>
	</select>
	
	<delete id="deleteById">
		update base_course set is_delete = #{isDelete},update_time = now() where id = #{id}
	</delete>
	
	<select id="findByCondition" parameterType="BaseCourse" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from base_course
		<where>
			<if test="name != null">
				and name = #{name} 
			</if>
			<if test="shortName != null">
				and short_name = #{shortName} 
			</if>
			<if test="englishName != null">
				and english_name = #{englishName} 
			</if>
			<if test="initial != null">
				and initial = #{initial} 
			</if>
			<if test="firstLetter != null">
				and first_letter = #{firstLetter} 
			</if>
			<if test="logo != null">
				and logo = #{logo} 
			</if>
			<if test="areaId != null">
				and area_id = #{areaId} 
			</if>
			<if test="treePath != null">
				and tree_path = #{treePath} 
			</if>
			<if test="address != null">
				and address = #{address} 
			</if>
			<if test="lon != null">
				and lon = #{lon} 
			</if>
			<if test="lat != null">
				and lat = #{lat} 
			</if>
			<if test="status != null">
				and status = #{status} 
			</if>
			<if test="isDelete != null">
				and is_delete = #{isDelete} 
			</if>
		</where>
	</select>
	<select id="list" resultMap="BaseResultMap">
	select * from base_course where is_delete = false
	</select>
	
	<select id="findCourseByUserId" resultMap="BaseResultMap">
		select 
			id,address,name,status,area_id,is_out_range,out_range_time,out_range_price,is_tip,wechat_tip 
		from base_course 
		where 
			id in(
				select * 
				from (
					select 
						j_addr_id as course_id 
					from 
						order_info 
					where 
						j_addr_type = 1 
						and order_status=3
						<if test="type == 1">
						and user_id=#{userId}
						</if> 
						<if test="type == 2">
						and proxy_user_id=#{userId}
						</if> 
					group by 
						j_addr_id 
					order by 
						id desc 
					limit 5
				) a
				UNION
				select * from (
					select 
						d_addr_id as course_id 
					from 
						order_info 
					where 
						d_addr_type = 1 
						and order_status=3 
						<if test="type == 1">
						and user_id=#{userId}
						</if> 
						<if test="type == 2">
						and proxy_user_id=#{userId}
						</if>
					group by 
						d_addr_id 
					order by 
						id desc 
					limit 5
				) b
		) and is_delete = false 
		limit 5
	</select>
	
	<select id="finByName" resultMap="BaseResultMap">
	select * from base_course where name like concat('%',#{name},'%') and is_delete = 0
	</select>
	
	<select id="findByHotCourse" resultMap="BaseResultMap">
		select course.id,course.address,course.name,course.status,course.area_id from base_course course  RIGHT join 
		(
		select course_id,sum(ct) ct from (
	        select * 
	        from (
	          select 
	            j_addr_id as course_id,
				count(id) ct
	          from 
	            order_info 
	          where 
	            j_addr_type = 1 
	            and order_status=3
	            and left(create_time,10)>= LEFT(DATE_SUB(now(), INTERVAL 30 DAY),10)
	          group by 
	            j_addr_id 
	          order by 
	            count(id) 
	        ) a
	        UNION
	        select * from (
	          select 
	            d_addr_id as course_id,
				count(id) ct
	          from 
	            order_info 
	          where 
	            d_addr_type = 1 
	            and order_status=3 
	            and left(create_time,10)>= LEFT(DATE_SUB(now(), INTERVAL 30 DAY),10)
	          group by 
	            d_addr_id 
	          order by 
	           count(id)
	        ) b
		)c group by course_id order by sum(ct) desc limit 10
		) course_order on course.id = course_order.course_id order by course_order.ct desc 
	</select>
	
	<select id="findUserCourseByUserId" resultMap="UserCourseResultMap">
		select a.*,b.contact,b.mobile from base_course a right join 
		(select addr_id,contact,mobile from user_order_address where  user_id = #{userId} and addr_type=1) b
		on a.id = b.addr_id
	</select>
	
</mapper>